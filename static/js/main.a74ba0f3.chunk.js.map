{"version":3,"sources":["db/index.ts","Nav/index.tsx","db/dao.ts","server/space.ts","Space/index.tsx","server/group.ts","server/type.ts","Type/index.tsx","Group/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["TABLE","menus","name","links","key","url","Nav","react_default","a","createElement","style","borderRight","height","fontWeight","map","x","es","to","padding","storage","window","localStorage","table","getter","t","getItem","JSON","parse","init","Proxy","get","target","p","Reflect","set","v","setItem","stringify","db","add","row","push","del","at","idx","findIndex","splice","update","updater","query","by","find","list","filter","max","Math","apply","concat","Object","toConsumableArray","id","Space","classCallCheck","this","alias","SPACE","Type","space_id","space_alias","TYPE","Group","path","is_root","type_id","type_alias","children","GROUP","GroupXGroup","group_id","group_alias","link_group_id","link_group_alias","GROUPXGROUP","database","Item","Form","layout","labelCol","span","wrapperCol","List","_useState","useState","_useState2","slicedToArray","setList","_Form$useForm","useForm","form","trigger","useCallback","kw","indexOf","useEffect","toSubmit","values","req","neo","console","log","old","objectSpread","Api","display","flex","es_button","type","onClick","setFieldsValue","es_table","dataSource","columns","dataIndex","title","render","es_form","assign","onFinish","label","required","input","disabled","htmlType","dbx","dbtype","dbspace","fillGroupLinks","group","g","gg","reduce","o","linked","has","fillGroupAlias","fillGroupChildren","notSelf","isMatch","startsWith","isMutiple","test","replace","Array","isArray","forEach","parentPath","toDel","son","params","useParams","root","Type_Item","tree","setTree","transfer","node","es_row","gutter","col","e","stopPropagation","es_tree","autoExpandParent","defaultExpandAll","showLine","treeData","Group_Item","Home","props","Boolean","location","hostname","match","ReactDOM","flexDirection","boxShadow","width","src_Nav","App_Home","src_Space","src_Type","src_Group","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a74ba0f3.chunk.js","sourcesContent":["export enum TABLE {\n  SPACE,\n  TYPE,\n  GROUP,\n  GROUPXGROUP,\n}\n\nconst storage = window.localStorage;\n\nconst table = (name: TABLE) => {\n  const getter = () => {\n    const t = storage.getItem(TABLE[name]);\n    return t ? JSON.parse(t) : [];\n  };\n\n  let init = getter();\n  const proxy = new Proxy(init, {\n    get(target, p) {\n      init = getter();\n      return Reflect.get(init, p);\n    },\n    set(target, p, v) {\n      Reflect.set(init, p, v);\n      storage.setItem(TABLE[name], JSON.stringify(init));\n      return true;\n    },\n  });\n\n  return proxy;\n};\n\ntype Selector<T> = (row: T) => boolean;\ntype Updater<T> = (row: T) => T;\n\nconst list = <T>(name: TABLE, by: Selector<T>) => {\n  const t = table(name);\n  return t.filter(by) as T[];\n};\n\nconst query = <T>(name: TABLE, by: Selector<T>) => {\n  const t = table(name);\n  return t.find(by) as T | undefined;\n};\n\nconst update = <T>(name: TABLE, at: Selector<T>, updater: Updater<T>) => {\n  const t = table(name);\n  const idx = t.findIndex(at);\n  if (idx > -1) {\n    t[idx] = updater(t[idx]);\n    return true;\n  }\n  return false;\n};\n\nconst del = <T>(name: TABLE, at: Selector<T>) => {\n  const t = table(name);\n  const idx = t.findIndex(at);\n  if (idx > -1) {\n    t.splice(idx, 1);\n    return true;\n  }\n  return false;\n};\n\nconst add = <T>(name: TABLE, row: T) => {\n  const t = table(name);\n  t.push(row);\n  return true;\n};\n\nconst db = <T>(name: TABLE) => {\n  return {\n    add: (row: T) => add(name, row),\n    del: (at: Selector<T>) => del(name, at),\n    update: (at: Selector<T>, updater: Updater<T>) => update(name, at, updater),\n    query: (by: Selector<T>) => query(name, by),\n    list: (by: Selector<T>) => list(name, by),\n  };\n};\ndb.TABLE = TABLE;\n\nexport default db as typeof db & {\n  TABLE: TABLE;\n};\n","import React, { FC } from 'react';\nimport { Link } from '@reach/router';\n\nconst menus = {\n  name: 'A SPACE ODYSSEY',\n  links: [\n    {\n      key: 'HOME',\n      name: 'HOME',\n      url: '/',\n    },\n    {\n      key: 'SPACE',\n      name: 'SPACE',\n      url: '/space',\n    },\n  ],\n};\n\nconst Nav: FC = () => {\n  return (\n    <div style={{ borderRight: '1px solid #ececec', height: '100%' }}>\n      <p style={{ fontWeight: 'bold' }}>{menus.name}</p>\n      {menus.links.map((x) => {\n        return (\n          <Link key={x.key} to={x.url}>\n            <div style={{ padding: '16px' }}>{x.name}</div>\n          </Link>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Nav;\n","// [\n//   Space[\n//     Group(\n//       Type\n//     )\n//   ]\n// ]\n\n// Space\n// Space X Group\n// Group X Type\n\nimport db, { TABLE } from './index';\nconst max = (table: TABLE) => {\n  return Math.max(\n    0,\n    ...db<any>(table)\n      .list((x) => true)\n      .map((x) => x.id),\n  );\n};\nexport class Space {\n  static id = max(TABLE.SPACE);\n  id = Space.id;\n  alias = '';\n}\n\nexport class Type {\n  static id = max(TABLE.TYPE);\n  id = Type.id;\n  alias = '';\n  space_id = 0;\n  space_alias = '';\n}\n\nexport class Group {\n  static id = max(TABLE.GROUP);\n  id = Group.id;\n  alias = '';\n  path = '';\n  is_root = false;\n  type_id = -1;\n  type_alias = '';\n  space_id = -1;\n  space_alias = '';\n  children: Group[] = [];\n}\n\nexport class GroupXGroup {\n  static id = max(TABLE.GROUPXGROUP);\n  id = GroupXGroup.id;\n  group_id = -1;\n  group_alias = '';\n  link_group_id = -1;\n  link_group_alias = '';\n}\n\nconst DAO = {\n  Space,\n  Type,\n  Group,\n  GroupXGroup,\n};\n\nexport default DAO;\n","import { Space } from '../db/dao';\nimport database from '../db';\n\nconst db = database<Space>(database.TABLE.SPACE);\n\ntype TQuery = { id?: number; alias?: string };\nconst query = (req: TQuery) => {\n  if (!req.id && !req.alias) return null;\n  return db.query((x) => {\n    if (req.id) return x.id === req.id;\n    if (req.alias) return x.alias === req.alias;\n    return false;\n  });\n};\nconst list = (kw?: string) => {\n  return db.list((x) => {\n    if (kw) {\n      return x.alias.indexOf(kw) > -1;\n    }\n    return true;\n  });\n};\n\nconst add = (alias: string) => {\n  const row = new Space();\n  row.alias = alias;\n  row.id = ++Space.id;\n  db.add(row);\n  return row.id;\n};\n\nconst del = (req: TQuery) => {\n  return db.del((x) => {\n    if (req.id) return x.id === req.id;\n    if (req.alias) return x.alias === req.alias;\n    return false;\n  });\n};\n\nconst update = (req: TQuery, neo: Space) => {\n  return db.update(\n    (x) => {\n      if (req.alias) return x.alias === req.alias;\n      if (req.id) return x.id === req.id;\n      return false;\n    },\n    (old) => {\n      return { ...old, ...neo };\n    },\n  );\n};\n\nexport { add, del, update, query, list };\n","import React, { FC, useCallback, useEffect, useState } from 'react';\nimport { Button, Form, Input, Table } from 'antd';\nimport { Link, RouteComponentProps } from '@reach/router';\nimport * as Api from '../server/space';\nimport { Space } from '../server/vo';\n\nconst { Item } = Form;\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst List: FC<RouteComponentProps> = () => {\n  const [list, setList] = useState<Space[]>([]);\n  const [form] = Form.useForm();\n  const trigger = useCallback(() => {\n    setList(Api.list());\n  }, []);\n  useEffect(() => {\n    trigger();\n  }, [trigger]);\n  const toSubmit = useCallback(\n    (values) => {\n      console.log('values', values);\n      if (values.id) {\n        Api.update({ id: values.id }, values);\n      } else {\n        Api.add(values.alias);\n      }\n      trigger();\n    },\n    [trigger],\n  );\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ flex: 1 }}>\n        <div>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.setFieldsValue({ alias: '', id: -1 });\n            }}\n          >\n            新增\n          </Button>\n        </div>\n        <Table\n          dataSource={list}\n          columns={[\n            { key: 'id', dataIndex: 'id', title: 'ID' },\n            { key: 'alias', dataIndex: 'alias', title: 'ALIAS' },\n            {\n              key: '__op__',\n              render(row) {\n                return (\n                  <div>\n                    <Button\n                      onClick={() => {\n                        Api.del({ id: row.id });\n                        trigger();\n                      }}\n                      type=\"dashed\"\n                    >\n                      删除\n                    </Button>\n                    <Button\n                      type=\"primary\"\n                      onClick={() => {\n                        form.setFieldsValue(row);\n                      }}\n                    >\n                      修改\n                    </Button>\n                    <Link to={`/type/${row.id}`}>\n                      <Button>编辑TYPE</Button>\n                    </Link>\n                  </div>\n                );\n              },\n            },\n          ]}\n        ></Table>\n      </div>\n      <div style={{ flex: 1 }}>\n        <h1>编辑区</h1>\n        <Form {...layout} form={form} onFinish={toSubmit}>\n          <Item name=\"id\" label=\"ID\" required>\n            <Input disabled></Input>\n          </Item>\n          <Item name=\"alias\" label=\"ALIAS\" required>\n            <Input></Input>\n          </Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            保存\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import { Group, GroupXGroup, Space, Type } from '../db/dao';\nimport database from '../db';\n\nconst db = database<Group>(database.TABLE.GROUP);\nconst dbx = database<GroupXGroup>(database.TABLE.GROUPXGROUP);\nconst dbtype = database<Type>(database.TABLE.TYPE);\nconst dbspace = database<Space>(database.TABLE.SPACE);\nexport type LinkedGroup = Group & {\n  children: LinkedGroup[];\n  links: {\n    [type_alias: string]: {\n      id: Group['id'];\n      alias: Group['alias'];\n    }[];\n  };\n};\n\ntype TQuery = {\n  id?: number;\n  type_id?: number;\n  alias?: string;\n};\n\nconst fillGroupLinks = (group: Group) => {\n  const g = group as LinkedGroup;\n  const links = dbx\n    // query linked groups\n    .list((x) => x.group_id === group.id)\n    .map((g) => db.query((gg) => gg.id === g.link_group_id))\n    .reduce((o, linked) => {\n      const has = o[linked!.type_alias];\n      if (has) {\n        has.push({\n          id: linked!.id,\n          alias: linked!.alias,\n        });\n      } else {\n        o[linked!.type_alias] = [\n          {\n            id: linked!.id,\n            alias: linked!.alias,\n          },\n        ];\n      }\n      return o;\n    }, {} as LinkedGroup['links']);\n  g.links = links;\n};\nconst fillGroupAlias = (group: Group) => {\n  group.space_alias = dbspace.query((x) => x.id === group.space_id)!.alias;\n  group.type_alias = dbtype.query((x) => x.id === group.type_id)!.alias;\n};\n\nconst fillGroupChildren = (group: Group) => {\n  const children = db.list((x) => {\n    const notSelf = x.path !== group.path;\n    const isMatch = x.path.startsWith(group.path);\n    const isMutiple = /#.*#/.test(x.path.replace(group.path, ''));\n    return notSelf && isMatch && !isMutiple;\n  });\n  if (Array.isArray(children)) {\n    children.forEach((g) => {\n      fillGroupAlias(g);\n      fillGroupLinks(g);\n      fillGroupChildren(g);\n    });\n    group.children = children;\n  }\n};\n\nconst query = (req: TQuery) => {\n  if (!req.id && !req.alias) return null;\n  const group = db.query((x) => {\n    if (req.id) return x.id === req.id;\n    if (req.alias) return x.alias === req.alias;\n    return false;\n  });\n  if (!group) return null;\n  fillGroupAlias(group);\n  fillGroupLinks(group);\n  fillGroupChildren(group);\n};\n\nconst root = (req: { type_id: number; space_id: number; kw?: string }) => {\n  return db\n    .list((x) => {\n      const isSpace = req.space_id === x.space_id;\n      if (!isSpace) return false;\n      const isType = req.type_id === x.type_id;\n      if (!isType) return false;\n      const isRoot = x.is_root;\n      if (!isRoot) return false;\n      const isMatch = req.kw ? x.alias.indexOf(req.kw) > -1 : true;\n      return isMatch;\n    })\n    .map((g) => {\n      fillGroupAlias(g);\n      fillGroupLinks(g);\n      fillGroupChildren(g);\n      return g;\n    }) as LinkedGroup[];\n};\n\nconst add = (req: { group: Partial<Group>; parentPath?: string }) => {\n  const row = { ...new Group(), ...req.group };\n  row.id = ++Group.id;\n  row.is_root = !req.parentPath;\n  row.path = req.parentPath ? `${req.parentPath}${row.id}#` : `ROOT${row.id}#`;\n  row.space_alias = dbspace.query((x) => x.id === req.group.space_id)!.alias;\n  row.type_alias = dbtype.query((x) => x.id === req.group.type_id)!.alias;\n  db.add(row);\n  return row.id;\n};\n\nconst link = (req: { links: number[]; group_id: number }) => {\n  const map = req.links.reduce((o: any, c) => {\n    o[c] = 'append';\n    return o;\n  }, {});\n  dbx.del((x) => {\n    const exist = map[x.link_group_id];\n    if (exist) {\n      delete map[x.link_group_id];\n    }\n    return x.group_id === req.group_id && exist;\n  });\n  Object.keys(map).forEach((append) => {\n    const x = new GroupXGroup();\n    x.id = ++GroupXGroup.id;\n    x.group_id = req.group_id;\n    x.link_group_id = +append;\n    x.group_alias = db.query((x) => x.id === req.group_id)!.alias;\n    x.link_group_alias = db.query((x) => x.id === +append)!.alias;\n    dbx.add(x);\n  });\n};\n\nconst del = (req: TQuery) => {\n  const toDel = db.query((x) => {\n    if (req.id) return x.id === req.id;\n    if (req.type_id) return x.type_id === req.id;\n    if (req.alias) return x.alias === req.alias;\n    return false;\n  });\n  // 事务\n\n  if (!toDel) return;\n  // 删除关联表\n  db.list((x) => x.path.startsWith(toDel.path)).forEach((son) => {\n    dbx.del((x) => x.group_id === son.id || x.link_group_id === son.id);\n  });\n  // 删除本体\n  const ret = db.del((x) => !x.is_root && x.path.startsWith(toDel.path));\n  return ret;\n};\n\nconst update = (req: TQuery, neo: Group) => {\n  return db.update(\n    (x) => {\n      if (req.alias) return x.alias === req.alias;\n      if (req.id) return x.id === req.id;\n      return false;\n    },\n    (old) => {\n      return { ...old, ...neo };\n    },\n  );\n};\n\nexport { add, link, del, update, query, root };\n","import { Group, Space, Type } from '../db/dao';\nimport database from '../db';\nimport * as group from './group';\n\nconst db = database<Type>(database.TABLE.TYPE);\nconst dbspace = database<Space>(database.TABLE.SPACE);\n\ntype TQuery = { id?: number; alias?: string };\n\nconst query = (req: TQuery) => {\n  if (!req.id && !req.alias) return null;\n  return db.query((x) => {\n    if (req.id) return x.id === req.id;\n    if (req.alias) return x.alias === req.alias;\n    return false;\n  });\n};\n\nconst list = (space_id: number, kw?: string) => {\n  return db.list((x) => {\n    const isSpace = x.space_id === space_id;\n    if (!isSpace) return false;\n    if (kw) {\n      return x.alias.indexOf(kw) > -1;\n    }\n    return true;\n  });\n};\n\nconst add = (space_id: number, alias: string) => {\n  const row = new Type();\n  row.space_id = space_id;\n  row.space_alias = dbspace.query((x) => x.id === space_id)!.alias;\n  row.alias = alias;\n  row.id = ++Type.id;\n  db.add(row);\n  const root = new Group();\n  root.space_id = space_id;\n  root.type_id = row.id;\n  root.alias = alias;\n  root.children = [];\n  group.add({ group: root });\n  return row.id;\n};\n\nconst del = (req: TQuery) => {\n  const t = db.query((x) => {\n    if (req.id) return x.id === req.id;\n    if (req.alias) return x.alias === req.alias;\n    return false;\n  });\n  if (!t) return;\n  const retg = group.del({ type_id: t.id });\n  const ret = db.del((x) => x.id === t.id);\n  return retg && ret;\n};\n\nconst update = (req: TQuery, neo: Type) => {\n  return db.update(\n    (x) => {\n      if (req.alias) return x.alias === req.alias;\n      if (req.id) return x.id === req.id;\n      return false;\n    },\n    (old) => {\n      return { ...old, ...neo };\n    },\n  );\n};\n\nexport { add, del, update, query, list };\n","import React, { FC, useCallback, useEffect, useState } from 'react';\nimport { Button, Form, Input, Table } from 'antd';\nimport { Link, RouteComponentProps, useParams } from '@reach/router';\nimport * as Api from '../server/type';\nimport { Type } from '../server/vo';\n\nconst { Item } = Form;\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst List: FC<RouteComponentProps> = () => {\n  const [list, setList] = useState<Type[]>([]);\n  const params = useParams();\n  const [form] = Form.useForm();\n  const trigger = useCallback(() => {\n    setList(Api.list(+params.space_id));\n  }, [params.space_id]);\n  useEffect(() => {\n    trigger();\n  }, [trigger]);\n  const toSubmit = useCallback(\n    (values) => {\n      console.log('values', values);\n      if (values.id) {\n        Api.update({ id: values.id }, values);\n      } else {\n        Api.add(+params.space_id, values.alias);\n      }\n      trigger();\n    },\n    [params.space_id, trigger],\n  );\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ flex: 1 }}>\n        <div>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.setFieldsValue({ alias: '', id: -1 });\n            }}\n          >\n            新增\n          </Button>\n        </div>\n        <Table\n          dataSource={list}\n          columns={[\n            { key: 'id', dataIndex: 'id', title: 'ID' },\n            { key: 'alias', dataIndex: 'alias', title: 'ALIAS' },\n            {\n              key: 'space_alias',\n              dataIndex: 'space_alias',\n              title: 'SPACE_ALIAS',\n            },\n            {\n              key: '__op__',\n              render(row) {\n                return (\n                  <div>\n                    <Button\n                      onClick={() => {\n                        Api.del({ id: row.id });\n                        trigger();\n                      }}\n                      type=\"dashed\"\n                    >\n                      删除\n                    </Button>\n                    <Button\n                      type=\"primary\"\n                      onClick={() => {\n                        form.setFieldsValue(row);\n                      }}\n                    >\n                      修改\n                    </Button>\n                    <Link to={`/group/${params.space_id}/${row.id}`}>\n                      <Button>编辑GROUP</Button>\n                    </Link>\n                  </div>\n                );\n              },\n            },\n          ]}\n        ></Table>\n      </div>\n      <div style={{ flex: 1 }}>\n        <h1>编辑区</h1>\n        <Form {...layout} form={form} onFinish={toSubmit}>\n          <Item name=\"id\" label=\"ID\" required>\n            <Input disabled></Input>\n          </Item>\n          <Item name=\"alias\" label=\"ALIAS\" required>\n            <Input></Input>\n          </Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            保存\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import React, { FC, useCallback, useEffect, useState } from 'react';\nimport { Button, Col, Form, Input, Row, Tree } from 'antd';\nimport { RouteComponentProps, useParams } from '@reach/router';\nimport * as Api from '../server/group';\n\nconst { Item } = Form;\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst List: FC<RouteComponentProps> = () => {\n  const [tree, setTree] = useState<any>([]);\n  const params = useParams();\n  const [form] = Form.useForm();\n  const trigger = useCallback(() => {\n    const tree = Api.root({\n      space_id: +params.space_id,\n      type_id: +params.type_id,\n    });\n    console.log('tree', tree);\n    const transfer = (node: any) => {\n      node.title = (\n        <Row gutter={16}>\n          <Col>\n            <div>{node.alias}</div>\n          </Col>\n          <Col>\n            <Button\n              type=\"link\"\n              onClick={(e) => {\n                e.stopPropagation();\n                Api.del({ id: node.id });\n                trigger();\n              }}\n            >\n              删除\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              type=\"link\"\n              onClick={(e) => {\n                e.stopPropagation();\n                form.setFieldsValue(node);\n              }}\n            >\n              查看\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              type=\"link\"\n              onClick={(e) => {\n                e.stopPropagation();\n                const neo: any = {};\n                neo.parentPath = node.path;\n                form.setFieldsValue(neo);\n              }}\n            >\n              添加子节点\n            </Button>\n          </Col>\n        </Row>\n      );\n      node.key = node.path;\n      node.children = Array.isArray(node.children)\n        ? node.children.map((x: any) => transfer(x))\n        : [];\n      return node;\n    };\n    setTree(tree.map((x) => transfer(x)));\n  }, [form, params.space_id, params.type_id]);\n  useEffect(() => {\n    trigger();\n  }, [trigger]);\n  const toSubmit = useCallback(\n    (values) => {\n      console.log('values', values);\n      if (values.id) {\n        Api.update(\n          { id: values.id },\n          { ...values, space_id: +params.space_id, type_id: +params.type_id },\n        );\n      } else {\n        Api.add({\n          group: {\n            ...values,\n            space_id: +params.space_id,\n            type_id: +params.type_id,\n          },\n          parentPath: values.parentPath,\n        });\n      }\n      trigger();\n    },\n    [params.space_id, params.type_id, trigger],\n  );\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ flex: 1 }}>\n        <Tree autoExpandParent defaultExpandAll showLine treeData={tree}></Tree>\n      </div>\n      <div style={{ flex: 1 }}>\n        <h1>编辑区</h1>\n        <Form {...layout} form={form} onFinish={toSubmit}>\n          <Item name=\"id\" label=\"ID\" required>\n            <Input disabled></Input>\n          </Item>\n          <Item name=\"parentPath\" label=\"PARENT_PATH\" required>\n            <Input disabled></Input>\n          </Item>\n          <Item name=\"path\" label=\"PATH\" required>\n            <Input disabled></Input>\n          </Item>\n          <Item name=\"alias\" label=\"ALIAS\" required>\n            <Input></Input>\n          </Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            保存\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import React from 'react';\nimport Nav from './Nav';\nimport { RouteComponentProps, Router } from '@reach/router';\nimport Space from './Space';\nimport Type from './Type';\nimport Group from './Group';\n\nlet Home = (props: RouteComponentProps) => <div>Home</div>;\n\nexport const App: React.FunctionComponent = () => {\n  return (\n    <div\n      style={{\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n    >\n      <div\n        style={{\n          padding: '8px',\n          boxShadow: '0px 0px 12px #cecece',\n        }}\n      >\n        <h2>Access Control Evolved</h2>\n      </div>\n      <div style={{ flex: 1, display: 'flex', padding: '16px' }}>\n        <div style={{ width: '200px', height: '100vh' }}>\n          <Nav></Nav>\n        </div>\n        <div style={{ height: '100vh', width: '100%', padding: '0 8px' }}>\n          <Router>\n            <Home path=\"/\"></Home>\n            <Space path=\"/space\"></Space>\n            <Type path=\"/type/:space_id\"></Type>\n            <Group path=\"/group/:space_id/:type_id\"></Group>\n          </Router>\n        </div>\n      </div>\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}