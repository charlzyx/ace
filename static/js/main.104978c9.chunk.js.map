{"version":3,"sources":["db/index.ts","Nav/ctx.ts","Nav/index.tsx","db/dao.ts","utils/index.tsx","server/group.ts","server/tag.ts","server/space.ts","Space/index.tsx","Tag/index.tsx","comps/TreeSelector.tsx","Group/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["TABLE","TYPE","Ctx","createContext","menus","update","Nav","ctx","useContext","react_default","a","createElement","style","borderRight","height","fontWeight","map","x","es","key","to","url","padding","name","replace","storage","window","localStorage","table","getter","t","getItem","JSON","parse","init","Proxy","get","target","p","Reflect","set","v","setItem","stringify","db","add","row","push","del","at","idx","findIndex","splice","updater","neo","query","by","find","list","filter","max","Math","apply","concat","Object","toConsumableArray","id","Space","classCallCheck","this","alias","SPACE","Tag","space_id","type","USER","space_alias","TAG","Group","path","is_root","tag_id","tag_alias","children","GROUP","GroupXGroup","group_id","link_group_id","GROUPXGROUP","matcher","cond","item","boolWhenEmpty","arguments","length","undefined","prototype","toString","call","keys","reduce","b","database","dbx","fillGroupLinks","group","g","links","gg","o","linked","has","fillGroupChildren","notSelf","isMatch","startsWith","isMutiple","test","Array","isArray","forEach","console","log","parent","objectSpread","linking","append","arr","k","ls","_query","i","aid","r","d","son","match","old","next","_","isEqual","dbspace","tag","space","Item","Form","layout","labelCol","span","wrapperCol","List","_useState","useState","_useState2","slicedToArray","setList","_Form$useForm","useForm","form","trigger","useCallback","Api","useEffect","toSubmit","values","display","flex","es_button","onClick","setFieldsValue","es_table","rowKey","dataSource","columns","dataIndex","title","render","es_form","assign","onFinish","label","required","input","disabled","htmlType","RadioGroup","Radio","params","useParams","root","Tag_Item","options","value","ROLE","DATA","RESOURCE","TreeSelector","_ref","onChange","tree","expandedKeys","setExpandedKeys","_useState3","_useState4","autoExpandParent","setAutoExpandParent","es_tree","checkable","onExpand","onCheck","checkedKeys","treeData","setTree","setDataSource","parenting","useRef","_useState5","_useState6","parentNow","setParentNow","transfer","node","es_row","gutter","col","e","stopPropagation","current","message","error","tags","trees","watedTypes","mapper","after","before","defaultExpandAll","showLine","Group_Item","comps_TreeSelector","up","spacelist","spaces","uniqBy","Home","props","Boolean","location","hostname","ReactDOM","setMenus","Nav_ctx","Provider","flexDirection","boxShadow","width","src_Nav","basepath","App_Home","src_Space","src_Tag","src_Group","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.104978c9.chunk.js","sourcesContent":["export enum TABLE {\n  SPACE = 'SPACE',\n  TAG = 'TAG',\n  GROUP = 'GROUP',\n  GROUPXGROUP = 'GROUPXGROUP',\n}\n\nexport enum TYPE {\n  USER = 'USER',\n  ROLE = 'ROLE',\n  DATA = 'DATA',\n  RESOURCE = 'RESOURCE',\n}\n\nconst storage = window.localStorage;\n\nconst table = (name: TABLE) => {\n  const getter = () => {\n    const t = storage.getItem(TABLE[name]);\n    return t ? JSON.parse(t) : [];\n  };\n\n  let init = getter();\n  const proxy = new Proxy(init, {\n    get(target, p) {\n      init = getter();\n      return Reflect.get(init, p);\n    },\n    set(target, p, v) {\n      Reflect.set(init, p, v);\n      storage.setItem(TABLE[name], JSON.stringify(init));\n      return true;\n    },\n  });\n\n  return proxy;\n};\n\ntype Selector<T> = (row: T) => boolean;\ntype Updater<T> = (row: T) => T;\n\nconst list = <T>(name: TABLE, by: Selector<T>) => {\n  const t = table(name);\n  return t.filter(by) as T[];\n};\n\nconst query = <T>(name: TABLE, by: Selector<T>) => {\n  const t = table(name);\n  return t.find(by) as T | undefined;\n};\n\nconst update = <T>(name: TABLE, at: Selector<T>, updater: Updater<T>) => {\n  const t = table(name);\n  const idx = t.findIndex(at);\n  if (idx > -1) {\n    const neo = updater(t[idx]);\n    t[idx] = neo;\n    return neo;\n  }\n};\n\nconst del = <T>(name: TABLE, at: Selector<T>) => {\n  const t = table(name);\n  const idx = t.findIndex(at);\n  if (idx > -1) {\n    t.splice(idx, 1);\n    return true;\n  }\n  return false;\n};\n\nconst add = <T>(name: TABLE, row: T) => {\n  const t = table(name);\n  t.push(row);\n  return true;\n};\n\nconst db = <T>(name: TABLE) => {\n  return {\n    add: (row: T) => add(name, row),\n    del: (at: Selector<T>) => del(name, at),\n    update: (at: Selector<T>, updater: Updater<T>) => update(name, at, updater),\n    query: (by: Selector<T>) => query(name, by),\n    list: (by: Selector<T>) => list(name, by),\n  };\n};\ndb.TABLE = TABLE;\n\nexport default db as typeof db & {\n  TABLE: TABLE;\n};\n","import { createContext } from 'react';\n\nexport type Menu = {\n  key: string;\n  name: string;\n  url: string;\n};\n\nconst Ctx = createContext<{\n  menus: Menu[];\n  update: () => void;\n}>({\n  menus: [],\n  update: () => {},\n});\n\nexport default Ctx;\n","import React, { FC, useContext } from 'react';\nimport { Link } from '@reach/router';\nimport Ctx from './ctx';\n\nconst menus = {\n  name: 'A SPACE ODYSSEY  🛰',\n  links: [\n    {\n      key: 'HOME',\n      name: 'HOME',\n      url: '/ace',\n    },\n    {\n      key: 'SPACE',\n      name: 'SPACE',\n      url: '/ace/space',\n    },\n  ],\n};\n\nconst Nav: FC = () => {\n  const ctx = useContext(Ctx);\n  return (\n    <div style={{ borderRight: '1px solid #ececec', height: '100%' }}>\n      <p style={{ fontWeight: 'bold' }}>{menus.name}</p>\n      {ctx\n        ? ctx.menus.map((x: any) => {\n            return (\n              <Link key={x.key} to={x.url}>\n                <div style={{ padding: '16px' }}>\n                  {x.name.replace('//GROUP', '____').replace('//TAG', '_')}\n                </div>\n              </Link>\n            );\n          })\n        : null}\n    </div>\n  );\n};\n\nexport default Nav;\n","// [\n//   Space[\n//     Group(\n//       Tag\n//     )\n//   ]\n// ]\n\n// Space\n// Space X Group\n// Group X Tag\n\nimport db, { TABLE, TYPE } from './index';\nconst max = (table: TABLE) => {\n  return Math.max(\n    0,\n    ...db<any>(table)\n      .list((x) => true)\n      .map((x) => x.id),\n  );\n};\nexport class Space {\n  static id = max(TABLE.SPACE);\n  id = Space.id;\n  alias = '';\n}\n\nexport class Tag {\n  static id = max(TABLE.TAG);\n  id = Tag.id;\n  alias = '';\n  space_id = 0;\n  type: TYPE = TYPE.USER;\n  space_alias = '';\n}\n\nexport class Group {\n  static id = max(TABLE.GROUP);\n  id = Group.id;\n  alias = '';\n  path = '';\n  is_root = false;\n  type: TYPE = TYPE.USER;\n  tag_id = 0;\n  tag_alias = '';\n  space_id = 0;\n  space_alias = '';\n  children: Group[] = [];\n}\n\nexport class GroupXGroup {\n  static id = max(TABLE.GROUPXGROUP);\n  id = GroupXGroup.id;\n  group_id = 0;\n  link_group_id = 0;\n}\n\nconst DAO = {\n  Space,\n  Tag,\n  Group,\n  GroupXGroup,\n};\n\nexport default DAO;\n","export const matcher = (cond: any, item: any, boolWhenEmpty = false) => {\n  if (\n    Object.prototype.toString.call(cond) !== '[object Object]' ||\n    Object.keys(cond).length === 0\n  )\n    return boolWhenEmpty;\n  const is = Object.keys(cond).reduce((b: any, key) => {\n    if (b === false) return false;\n    const match = cond[key] === item[key];\n    return match;\n  }, null);\n  return !!is;\n};\n\nexport const transfer = (\n  node: any,\n  mapper: { before: string; after: string }[],\n) => {\n  mapper.forEach((map) => {\n    node[map.after] = node[map.before];\n  });\n  node.children = Array.isArray(node.children)\n    ? node.children.map((x: any) => transfer(x, mapper))\n    : [];\n  return node;\n};\n","import { Group, GroupXGroup } from '../db/dao';\nimport database from '../db';\nimport _ from 'lodash';\nimport { matcher } from '../utils';\n\nconst db = database<Group>(database.TABLE.GROUP);\nconst dbx = database<GroupXGroup>(database.TABLE.GROUPXGROUP);\nexport type LinkedGroup = Group & {\n  children: LinkedGroup[];\n  links: {\n    [tag_alias: string]: Group['path'][];\n  };\n};\n\nconst fillGroupLinks = (group: Group) => {\n  const g = group as LinkedGroup;\n  const links = dbx\n    .list((x) => x.group_id === group.id)\n    .map((g) => db.query((gg) => gg.id === g.link_group_id))\n    .reduce((o, linked) => {\n      const has = o[linked!.tag_alias];\n      if (has) {\n        has.push(linked!.path);\n      } else {\n        o[linked!.tag_alias] = [linked!.path];\n      }\n      return o;\n    }, {} as LinkedGroup['links']);\n  g.links = links;\n};\n\nconst fillGroupChildren = (group: Group) => {\n  const children = db.list((x) => {\n    const notSelf = x.path !== group.path;\n    const isMatch = x.path.startsWith(group.path);\n    const isMutiple = /#.*#/.test(x.path.replace(group.path, ''));\n    return notSelf && isMatch && !isMutiple;\n  });\n  if (Array.isArray(children)) {\n    children.forEach((g) => {\n      // fillGroupAlias(g);\n      fillGroupLinks(g);\n      fillGroupChildren(g);\n    });\n    group.children = children;\n  }\n};\n\nconst query = (group: Partial<Group>) => {\n  console.log('group', group);\n  const g = db.query((x) => matcher(group, x, false));\n  if (!g) return null;\n  fillGroupLinks(g);\n  fillGroupChildren(g);\n  return g as LinkedGroup;\n};\n\nconst list = (group: Partial<Group>) => {\n  console.log('group', group);\n  const items = db.list((x) => matcher(group, x, false));\n  return items.map((g) => {\n    fillGroupLinks(g);\n    fillGroupChildren(g);\n    return g;\n  });\n};\n\nconst add = (\n  group: Omit<Group, 'id'>,\n  parent: {\n    path?: Group['path'];\n    space_id: Group['space_id'];\n    space_alias: Group['space_alias'];\n    tag_id: Group['tag_id'];\n    tag_alias: Group['tag_alias'];\n    type: Group['type'];\n  },\n) => {\n  const row = { ...new Group(), ...group };\n  const links = (row as LinkedGroup).links;\n  // @ts-ignore\n  delete row.links;\n  row.id = ++Group.id;\n  row.path = parent.path ? `${parent.path}${row.id}#` : `ROOT${row.id}#`;\n  row.space_id = parent.space_id;\n  row.space_alias = parent.space_alias;\n  row.tag_id = parent.tag_id;\n  row.tag_alias = parent.tag_alias;\n  row.type = parent.type;\n  linking(links, row.id);\n  db.add(row);\n  return row.id;\n};\n\nconst linking = (links: LinkedGroup['links'], group_id: number) => {\n  if (!links) return;\n  const fltten = Object.keys(links).reduce((arr, k) => {\n    const ls = (links as any)[k] || [];\n    return arr.concat(\n      ls.map((path: string) => {\n        // path -> id\n        return query({ path })?.id;\n      }),\n    );\n  }, []);\n  const append = fltten.reduce((o: any, id) => {\n    o[id] = 'append';\n    return o;\n  }, {});\n  dbx.query((x) => {\n    if (x.group_id === group_id) {\n      // 已经存在的\n      if (append[x.link_group_id]) {\n        delete append[x.link_group_id];\n      } else {\n        // 不存在了, 双向删除\n        dbx.del((i) => {\n          return (\n            (i.group_id === group_id && i.link_group_id === x.link_group_id) ||\n            (i.group_id === x.link_group_id && i.link_group_id === x.group_id)\n          );\n        });\n      }\n    }\n\n    return false;\n  });\n  // 删除不存在的 link\n  // 双向表\n  Object.keys(append).forEach((aid) => {\n    const x = new GroupXGroup();\n    x.id = ++GroupXGroup.id;\n    x.group_id = group_id;\n    x.link_group_id = +aid;\n    dbx.add(x);\n    const r = new GroupXGroup();\n    r.id = ++GroupXGroup.id;\n    r.group_id = +aid;\n    r.link_group_id = group_id;\n    dbx.add(r);\n  });\n};\n\nconst del = (group: Partial<Group>) => {\n  const d = db.query((x) => matcher(group, x, false));\n\n  // 事务??\n\n  if (!d) return;\n  // 删除关联表\n  db.list((x) => x.path.startsWith(d.path)).forEach((son) => {\n    dbx.del((x) => x.group_id === son.id || x.link_group_id === son.id);\n  });\n  // 删除本体\n  const ret = db.del((x) => !x.is_root && x.path.startsWith(d.path));\n  return ret;\n};\n\nconst update = (group: Partial<LinkedGroup>) => {\n  const match: typeof group = {};\n  if (group.id) match.id = group.id;\n  if (group.tag_id) match.tag_id = group.tag_id;\n  if (group.space_id) match.space_id = group.space_id;\n  const neo = db.update(\n    (x) => matcher(match, x, false),\n    (old) => {\n      return { ...old, ...group };\n    },\n  );\n  if (!neo) return;\n  const next = query({ id: neo.id });\n  if (group.links && !_.isEqual(group.links, next?.links)) {\n    linking(group.links, neo.id);\n  }\n};\n\nexport { add, del, update, query, list };\n","import { Group, Space, Tag } from '../db/dao';\nimport database from '../db';\nimport * as group from './group';\nimport { matcher } from '../utils';\n\nconst db = database<Tag>(database.TABLE.TAG);\nconst dbspace = database<Space>(database.TABLE.SPACE);\n\nconst query = (tag: Partial<Tag>) => {\n  const t = db.query((x) => matcher(tag, x, false));\n  return t;\n};\n\nconst list = (tag?: Partial<Tag>) => {\n  const tags = db.list((x) => matcher(tag, x, true));\n  return tags;\n};\n\nconst add = (tag: Omit<Tag, 'id'>) => {\n  const row = { ...new Tag(), ...tag };\n  row.space_alias = dbspace.query((x) => x.id === tag.space_id)!.alias;\n  row.alias = tag.alias;\n  row.id = ++Tag.id;\n  db.add(row);\n  const root = new Group();\n  root.alias = tag.alias;\n  root.children = [];\n  root.is_root = true;\n\n  group.add(root, {\n    space_alias: row.space_alias,\n    space_id: row.space_id,\n    tag_id: row.id,\n    tag_alias: row.alias,\n    type: row.type,\n  });\n  return row.id;\n};\n\nconst del = (tag: Partial<Tag>) => {\n  const t = db.query((x) => matcher(tag, x, false));\n  if (!t) return;\n  const retg = group.del({ tag_id: t.id });\n  const ret = db.del((x) => x.id === t.id);\n  return retg && ret;\n};\n\nconst update = (tag: Partial<Tag>) => {\n  const match: typeof tag = {};\n  if (tag.id) match.id = tag.id;\n  if (tag.space_id) match.space_id = tag.space_id;\n  const neo = db.update(\n    (x) => matcher({ id: tag.id }, x, false),\n    (old) => {\n      return { ...old, ...tag };\n    },\n  );\n  if (neo) {\n    group.list({ tag_id: neo.id }).forEach((g) => {\n      group.update({\n        id: g.id,\n        tag_id: neo.id,\n        type: neo.type,\n        tag_alias: neo.alias,\n      });\n    });\n  }\n};\n\nexport { add, del, update, query, list };\n","import { Space } from '../db/dao';\nimport database from '../db';\nimport { matcher } from '../utils';\nimport * as tag from './tag';\n\nconst db = database<Space>(database.TABLE.SPACE);\n\nconst query = (space: Partial<Space>) => {\n  return db.query((x) => matcher(space, x, false));\n};\n\nconst list = (space?: Partial<Space>) => {\n  return db.list((x) => matcher(space, x, true));\n};\n\nconst add = (space: Omit<Space, 'id'>) => {\n  const row = { ...new Space(), ...space };\n  row.id = ++Space.id;\n  db.add(row);\n  return row.id;\n};\n\nconst del = (space: Partial<Space>) => {\n  return db.del((x) => matcher(space, x, false));\n};\n\nconst update = (space: Partial<Space>) => {\n  const neo = db.update(\n    (x) => matcher({ id: space.id }, x, false),\n    (old) => {\n      return { ...old, ...space };\n    },\n  );\n\n  if (neo) {\n    tag.list({ space_id: neo.id }).forEach((t) => {\n      tag.update({\n        space_id: neo.id,\n        space_alias: neo.alias,\n      });\n    });\n  }\n};\n\nexport { add, del, update, query, list };\n","import React, { FC, useCallback, useContext, useEffect, useState } from 'react';\nimport { Button, Form, Input, Table } from 'antd';\nimport { Link, RouteComponentProps } from '@reach/router';\nimport Ctx from '../Nav/ctx';\nimport * as Api from '../server/space';\nimport { Space } from '../server/vo';\n\nconst { Item } = Form;\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst List: FC<RouteComponentProps> = () => {\n  const ctx = useContext(Ctx);\n  const [list, setList] = useState<Space[]>([]);\n  const [form] = Form.useForm();\n  const trigger = useCallback(() => {\n    const list = Api.list();\n    setList(list);\n    ctx.update();\n  }, [ctx]);\n  useEffect(() => {\n    trigger();\n  }, [trigger]);\n  const toSubmit = useCallback(\n    (values) => {\n      console.log('values', values);\n      if (values.id) {\n        Api.update(values);\n      } else {\n        Api.add(values);\n      }\n      trigger();\n    },\n    [trigger],\n  );\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ flex: 1 }}>\n        <div>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.setFieldsValue({ alias: '', id: '' });\n            }}\n          >\n            新增\n          </Button>\n        </div>\n        <Table\n          rowKey=\"id\"\n          dataSource={list}\n          columns={[\n            { key: 'id', dataIndex: 'id', title: 'ID' },\n            { key: 'alias', dataIndex: 'alias', title: 'ALIAS' },\n            {\n              key: '__op__',\n              render(row) {\n                return (\n                  <div>\n                    <Button\n                      onClick={() => {\n                        Api.del({ id: row.id });\n                        trigger();\n                      }}\n                      type=\"dashed\"\n                    >\n                      删除\n                    </Button>\n                    <Button\n                      type=\"primary\"\n                      onClick={() => {\n                        form.setFieldsValue(row);\n                      }}\n                    >\n                      修改\n                    </Button>\n                    <Link to={`/ace/tag/${row.id}`}>\n                      <Button>编辑TAG</Button>\n                    </Link>\n                  </div>\n                );\n              },\n            },\n          ]}\n        ></Table>\n      </div>\n      <div style={{ flex: 1 }}>\n        <h3>编辑区</h3>\n        <Form {...layout} form={form} onFinish={toSubmit}>\n          <Item name=\"id\" label=\"ID\" required>\n            <Input disabled></Input>\n          </Item>\n          <Item name=\"alias\" label=\"ALIAS\" required>\n            <Input></Input>\n          </Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            保存\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import React, { FC, useCallback, useContext, useEffect, useState } from 'react';\nimport { Button, Form, Input, Radio, Table } from 'antd';\nimport { Link, RouteComponentProps, useParams } from '@reach/router';\nimport * as Api from '../server/tag';\nimport { Tag } from '../server/vo';\nimport Ctx from '../Nav/ctx';\nimport { TYPE } from '../db';\n\nconst { Item } = Form;\nconst { Group: RadioGroup } = Radio;\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst List: FC<RouteComponentProps> = () => {\n  const [list, setList] = useState<Tag[]>([]);\n  const ctx = useContext(Ctx);\n  const params = useParams();\n  const [form] = Form.useForm();\n  const trigger = useCallback(() => {\n    setList(Api.list({ space_id: +params.space_id }));\n    ctx.update();\n  }, [ctx, params.space_id]);\n  useEffect(() => {\n    trigger();\n  }, [trigger]);\n  const toSubmit = useCallback(\n    (values) => {\n      console.log('values', values);\n      values.space_id = +params.space_id;\n      if (values.id) {\n        Api.update(values);\n      } else {\n        Api.add(values);\n      }\n      trigger();\n    },\n    [params.space_id, trigger],\n  );\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ flex: 1 }}>\n        <div>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.setFieldsValue({ alias: '', id: '' });\n            }}\n          >\n            新增\n          </Button>\n        </div>\n        <Table\n          rowKey=\"id\"\n          dataSource={list}\n          columns={[\n            { key: 'id', dataIndex: 'id', title: 'ID' },\n            { key: 'alias', dataIndex: 'alias', title: 'ALIAS' },\n            { key: 'type', dataIndex: 'type', title: 'TYPE' },\n            {\n              key: 'space_alias',\n              dataIndex: 'space_alias',\n              title: 'SPACE_ALIAS',\n            },\n            {\n              key: '__op__',\n              render(row) {\n                return (\n                  <div>\n                    <Button\n                      onClick={() => {\n                        Api.del({ id: row.id });\n                        trigger();\n                      }}\n                      type=\"dashed\"\n                    >\n                      删除\n                    </Button>\n                    <Button\n                      type=\"primary\"\n                      onClick={() => {\n                        form.setFieldsValue(row);\n                      }}\n                    >\n                      修改\n                    </Button>\n                    <Link to={`/ace/group/${params.space_id}/${row.id}`}>\n                      <Button>编辑GROUP</Button>\n                    </Link>\n                  </div>\n                );\n              },\n            },\n          ]}\n        ></Table>\n      </div>\n      <div style={{ flex: 1 }}>\n        <h3>编辑区</h3>\n        <Form {...layout} form={form} onFinish={toSubmit}>\n          <Item name=\"id\" label=\"ID\" required>\n            <Input disabled></Input>\n          </Item>\n          <Item name=\"alias\" label=\"ALIAS\" required>\n            <Input></Input>\n          </Item>\n          <Item name=\"type\" label=\"TYPE\" required>\n            <RadioGroup\n              options={[\n                {\n                  label: TYPE.USER,\n                  value: TYPE.USER,\n                },\n                {\n                  label: TYPE.ROLE,\n                  value: TYPE.ROLE,\n                },\n                {\n                  label: TYPE.DATA,\n                  value: TYPE.DATA,\n                },\n                {\n                  label: TYPE.RESOURCE,\n                  value: TYPE.RESOURCE,\n                },\n              ]}\n            ></RadioGroup>\n          </Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            保存\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import React, { FC, useEffect, useState } from 'react';\nimport { Tree } from 'antd';\n\ntype Props = {\n  value?: string[];\n  onChange?: (value: string[]) => void;\n  tree: any[];\n};\n\nconst TreeSelector: FC<Props> = ({ value, onChange, tree }) => {\n  const [expandedKeys, setExpandedKeys] = useState<string[]>([]);\n  // const [checkedKeys, setCheckedKeys] = useState<string[]>();\n  // const [selectedKeys, setSelectedKeys] = useState<string[]>([]);\n  const [autoExpandParent, setAutoExpandParent] = useState<boolean>(true);\n\n  const onExpand = (expandedKeys: any) => {\n    console.log('onExpand', expandedKeys);\n    // if not set autoExpandParent to false, if children expanded, parent can not collapse.\n    // or, you can remove all expanded children keys.\n    setExpandedKeys(expandedKeys);\n    setAutoExpandParent(false);\n  };\n\n  useEffect(() => {\n    if (Array.isArray(value)) {\n      setExpandedKeys(value);\n    }\n  }, [value]);\n\n  const onCheck = (checkedKeys: any) => {\n    console.log('onCheck', checkedKeys);\n    // setCheckedKeys(checkedKeys);\n    if (onChange) {\n      onChange(checkedKeys);\n    }\n  };\n\n  return (\n    <Tree\n      checkable\n      onExpand={onExpand}\n      expandedKeys={expandedKeys}\n      autoExpandParent={autoExpandParent}\n      onCheck={onCheck}\n      checkedKeys={value}\n      treeData={tree}\n    />\n  );\n};\n\nexport default TreeSelector;\n","import React, { FC, useCallback, useEffect, useRef, useState } from 'react';\nimport { Button, Col, Form, Input, Row, Tree, message } from 'antd';\nimport { RouteComponentProps, useParams } from '@reach/router';\nimport * as Api from '../server/group';\nimport { TYPE } from '../db';\nimport { Group } from '../server/vo';\nimport TreeSelector from '../comps/TreeSelector';\nimport { transfer } from '../utils';\n\nconst { Item } = Form;\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\n\nconst watedTypes = (type: TYPE) => {\n  switch (type) {\n    case TYPE.USER:\n      return [TYPE.DATA, TYPE.ROLE];\n    case TYPE.DATA:\n      return [TYPE.USER];\n    case TYPE.RESOURCE:\n      return [TYPE.ROLE];\n    case TYPE.ROLE:\n      return [TYPE.USER, TYPE.RESOURCE];\n    default:\n      return [];\n  }\n};\nconst List: FC<RouteComponentProps> = () => {\n  const [tree, setTree] = useState<any>([]);\n  const [dataSource, setDataSource] = useState<any>({});\n  const params = useParams();\n  const [form] = Form.useForm();\n\n  const parenting = useRef<Group>();\n  const [parentNow, setParentNow] = useState<Group>();\n\n  const trigger = useCallback(() => {\n    const root = Api.query({\n      space_id: +params.space_id,\n      tag_id: +params.tag_id,\n      is_root: true,\n    });\n    const transfer = (node: any) => {\n      node.title = (\n        <Row gutter={16}>\n          <Col>\n            <div>{node.alias}</div>\n          </Col>\n          <Col>\n            <Button\n              type=\"link\"\n              onClick={(e) => {\n                e.stopPropagation();\n                Api.del({ id: node.id });\n                trigger();\n              }}\n            >\n              删除\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              type=\"link\"\n              onClick={(e) => {\n                e.stopPropagation();\n                form.setFieldsValue(node);\n              }}\n            >\n              查看\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              type=\"link\"\n              onClick={(e) => {\n                e.stopPropagation();\n                const neo: any = {};\n                parenting.current = node;\n                setParentNow(node);\n                form.setFieldsValue(neo);\n              }}\n            >\n              添加子节点\n            </Button>\n          </Col>\n        </Row>\n      );\n      node.key = node.path;\n      node.children = Array.isArray(node.children)\n        ? node.children.map((x: any) => transfer(x))\n        : [];\n      return node;\n    };\n    setTree([transfer(root || {})]);\n  }, [form, params.space_id, params.tag_id]);\n\n  useEffect(() => {\n    trigger();\n  }, [trigger]);\n\n  const toSubmit = useCallback(\n    (values) => {\n      console.log('values', values);\n      if (values.id) {\n        Api.update({\n          ...values,\n          space_id: +params.space_id,\n          tag_id: +params.tag_id,\n        });\n      } else {\n        if (!parenting.current) {\n          return message.error('请先选择父节点');\n        }\n        Api.add(\n          {\n            ...values,\n            space_id: +params.space_id,\n            tag_id: +params.tag_id,\n          },\n          parenting.current,\n        );\n      }\n      trigger();\n    },\n    [params.space_id, params.tag_id, trigger],\n  );\n\n  const tags = useCallback(() => {\n    if (!tree[0]) return;\n    const types = watedTypes(tree[0].type);\n    const trees = types.reduce((o: any, type) => {\n      const nodes = Api.list({ type, is_root: true });\n      const tree = nodes.reduce((a: any, node) => {\n        if (!node) return [];\n        const t = transfer(node, [\n          { before: 'alias', after: 'title' },\n          {\n            before: 'path',\n            after: 'key',\n          },\n        ]);\n        a[node.alias] = [t];\n        return a;\n      }, {});\n      o[type] = tree;\n      return o;\n    }, {});\n    setDataSource(trees);\n  }, [tree]);\n\n  useEffect(() => {\n    tags();\n  }, [tags]);\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ flex: 1 }}>\n        <Tree autoExpandParent defaultExpandAll showLine treeData={tree}></Tree>\n      </div>\n      <div style={{ flex: 1 }}>\n        <h3>编辑区</h3>\n        <div>\n          <h4>\n            当前父节点: {parentNow?.alias} / {parentNow?.path}\n          </h4>\n        </div>\n        <Form {...layout} form={form} onFinish={toSubmit}>\n          <Item name=\"id\" label=\"ID\" required>\n            <Input disabled></Input>\n          </Item>\n          <Item name=\"path\" label=\"PATH\" required>\n            <Input disabled></Input>\n          </Item>\n          <Item name=\"alias\" label=\"ALIAS\" required>\n            <Input></Input>\n          </Item>\n          {Object.keys(dataSource).map((type) => {\n            return (\n              <div key={type}>\n                <h2>{type}</h2>\n                <div>\n                  {Object.keys(dataSource[type]).map((alias) => {\n                    return (\n                      <Item key={alias} name={['links', alias]} label={alias}>\n                        <TreeSelector\n                          tree={dataSource[type][alias]}\n                        ></TreeSelector>\n                      </Item>\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          })}\n\n          <Button type=\"primary\" htmlType=\"submit\">\n            保存\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useEffect, useState } from 'react';\nimport Nav from './Nav';\nimport _ from 'lodash';\nimport Ctx, { Menu } from './Nav/ctx';\nimport { RouteComponentProps, Router } from '@reach/router';\nimport Space from './Space';\nimport Tag from './Tag';\nimport Group from './Group';\nimport * as tags from './server/tag';\nimport * as spaces from './server/space';\n\nconst up = (updater: React.Dispatch<React.SetStateAction<Menu[]>>) => {\n  return () => {\n    const spacelist: Menu[] = spaces.list().map((x) => {\n      return {\n        key: x.id.toString(),\n        name: `🛸_${x.alias}`,\n        url: `/ace/tag/${x.id}`,\n      };\n    });\n    const list: Menu[] = tags.list().map((x) => {\n      return {\n        key: x.id.toString(),\n        name: `🚀____${x.alias}`,\n        url: `/ace/group/${x.space_id}/${x.id}`,\n      };\n    });\n    updater((x) => {\n      const menus = x.concat(spacelist).concat(list);\n      return _.uniqBy(menus, (x) => x.key);\n    });\n  };\n};\n\nlet Home = (props: RouteComponentProps) => <div>Home</div>;\n\nexport const App: React.FunctionComponent = () => {\n  const [menus, setMenus] = useState<Menu[]>([\n    {\n      key: 'HOME',\n      name: 'HOME',\n      url: '/ace',\n    },\n    {\n      key: 'SPACE',\n      name: 'SPACE',\n      url: '/ace/space',\n    },\n  ]);\n  useEffect(() => {\n    up(setMenus)();\n  }, []);\n\n  return (\n    <Ctx.Provider value={{ menus, update: up(setMenus) }}>\n      <div\n        style={{\n          height: '100vh',\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <div\n          style={{\n            padding: '8px',\n            boxShadow: '0px 0px 12px #cecece',\n          }}\n        >\n          <h2>🚒 Access Control Evolved</h2>\n        </div>\n        <div style={{ flex: 1, display: 'flex', padding: '16px' }}>\n          <div style={{ width: '200px', height: '100vh' }}>\n            <Nav></Nav>\n          </div>\n          <div style={{ height: '100vh', width: '100%', padding: '0 8px' }}>\n            <Router basepath=\"/ace\">\n              <Home path=\"/\"></Home>\n              <Space path=\"/space\"></Space>\n              <Tag path=\"/tag/:space_id\"></Tag>\n              <Group path=\"/group/:space_id/:tag_id\"></Group>\n            </Router>\n          </div>\n        </div>\n      </div>\n    </Ctx.Provider>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentTag = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentTag != null && contentTag.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}