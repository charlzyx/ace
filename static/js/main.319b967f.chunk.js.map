{"version":3,"sources":["db/index.ts","Nav/index.tsx","db/dao.ts","utils/index.tsx","server/space.ts","Space/index.tsx","server/group.ts","server/tag.ts","Tag/index.tsx","comps/TreeSelector.tsx","Group/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["TABLE","TYPE","menus","name","links","key","url","Nav","react_default","a","createElement","style","borderRight","height","fontWeight","map","x","es","to","padding","storage","window","localStorage","table","getter","t","getItem","JSON","parse","init","Proxy","get","target","p","Reflect","set","v","setItem","stringify","db","add","row","push","del","at","idx","findIndex","splice","update","updater","query","by","find","list","filter","max","Math","apply","concat","Object","toConsumableArray","id","Space","classCallCheck","this","alias","SPACE","Tag","space_id","type","USER","space_alias","TAG","Group","path","is_root","tag_id","tag_alias","children","GROUP","GroupXGroup","group_id","group_alias","link_group_id","link_group_alias","GROUPXGROUP","matcher","cond","item","boolWhenEmpty","arguments","length","undefined","prototype","toString","call","keys","reduce","b","database","Item","Form","layout","labelCol","span","wrapperCol","List","_useState","useState","_useState2","slicedToArray","setList","_Form$useForm","useForm","form","trigger","useCallback","space","useEffect","toSubmit","values","console","log","old","objectSpread","Api","display","flex","es_button","onClick","setFieldsValue","es_table","dataSource","columns","dataIndex","title","render","es_form","assign","onFinish","label","required","input","disabled","htmlType","dbx","dbtype","dbspace","fillGroupLinks","group","g","gg","o","linked","has","fillGroupAlias","fillGroupChildren","notSelf","isMatch","startsWith","isMutiple","test","replace","Array","isArray","forEach","parent","d","son","match","RadioGroup","Radio","params","useParams","tag","neo","root","Tag_Item","options","value","ROLE","DATA","RESOURCE","TreeSelector","_ref","onChange","tree","expandedKeys","setExpandedKeys","_useState3","_useState4","autoExpandParent","setAutoExpandParent","es_tree","checkable","onExpand","onCheck","checkedKeys","treeData","setTree","setDataSource","transfer","node","es_row","gutter","col","e","stopPropagation","parentPath","tags","trees","watedTypes","mapper","after","before","defaultExpandAll","showLine","Group_Item","comps_TreeSelector","Home","props","Boolean","location","hostname","ReactDOM","flexDirection","boxShadow","width","src_Nav","App_Home","src_Space","src_Tag","src_Group","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.319b967f.chunk.js","sourcesContent":["export enum TABLE {\n  SPACE = 'SPACE',\n  TAG = 'TAG',\n  GROUP = 'GROUP',\n  GROUPXGROUP = 'GROUPXGROUP',\n}\n\nexport enum TYPE {\n  USER = 'USER',\n  ROLE = 'ROLE',\n  DATA = 'DATA',\n  RESOURCE = 'RESOURCE',\n}\n\nconst storage = window.localStorage;\n\nconst table = (name: TABLE) => {\n  const getter = () => {\n    const t = storage.getItem(TABLE[name]);\n    return t ? JSON.parse(t) : [];\n  };\n\n  let init = getter();\n  const proxy = new Proxy(init, {\n    get(target, p) {\n      init = getter();\n      return Reflect.get(init, p);\n    },\n    set(target, p, v) {\n      Reflect.set(init, p, v);\n      storage.setItem(TABLE[name], JSON.stringify(init));\n      return true;\n    },\n  });\n\n  return proxy;\n};\n\ntype Selector<T> = (row: T) => boolean;\ntype Updater<T> = (row: T) => T;\n\nconst list = <T>(name: TABLE, by: Selector<T>) => {\n  const t = table(name);\n  return t.filter(by) as T[];\n};\n\nconst query = <T>(name: TABLE, by: Selector<T>) => {\n  const t = table(name);\n  return t.find(by) as T | undefined;\n};\n\nconst update = <T>(name: TABLE, at: Selector<T>, updater: Updater<T>) => {\n  const t = table(name);\n  const idx = t.findIndex(at);\n  if (idx > -1) {\n    t[idx] = updater(t[idx]);\n    return true;\n  }\n  return false;\n};\n\nconst del = <T>(name: TABLE, at: Selector<T>) => {\n  const t = table(name);\n  const idx = t.findIndex(at);\n  if (idx > -1) {\n    t.splice(idx, 1);\n    return true;\n  }\n  return false;\n};\n\nconst add = <T>(name: TABLE, row: T) => {\n  const t = table(name);\n  t.push(row);\n  return true;\n};\n\nconst db = <T>(name: TABLE) => {\n  return {\n    add: (row: T) => add(name, row),\n    del: (at: Selector<T>) => del(name, at),\n    update: (at: Selector<T>, updater: Updater<T>) => update(name, at, updater),\n    query: (by: Selector<T>) => query(name, by),\n    list: (by: Selector<T>) => list(name, by),\n  };\n};\ndb.TABLE = TABLE;\n\nexport default db as typeof db & {\n  TABLE: TABLE;\n};\n","import React, { FC } from 'react';\nimport { Link } from '@reach/router';\n\nconst menus = {\n  name: 'A SPACE ODYSSEY',\n  links: [\n    {\n      key: 'HOME',\n      name: 'HOME',\n      url: '/',\n    },\n    {\n      key: 'SPACE',\n      name: 'SPACE',\n      url: '/space',\n    },\n  ],\n};\n\nconst Nav: FC = () => {\n  return (\n    <div style={{ borderRight: '1px solid #ececec', height: '100%' }}>\n      <p style={{ fontWeight: 'bold' }}>{menus.name}</p>\n      {menus.links.map((x) => {\n        return (\n          <Link key={x.key} to={x.url}>\n            <div style={{ padding: '16px' }}>{x.name}</div>\n          </Link>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Nav;\n","// [\n//   Space[\n//     Group(\n//       Tag\n//     )\n//   ]\n// ]\n\n// Space\n// Space X Group\n// Group X Tag\n\nimport db, { TABLE, TYPE } from './index';\nconst max = (table: TABLE) => {\n  return Math.max(\n    0,\n    ...db<any>(table)\n      .list((x) => true)\n      .map((x) => x.id),\n  );\n};\nexport class Space {\n  static id = max(TABLE.SPACE);\n  id = Space.id;\n  alias = '';\n}\n\nexport class Tag {\n  static id = max(TABLE.TAG);\n  id = Tag.id;\n  alias = '';\n  space_id = 0;\n  type: TYPE = TYPE.USER;\n  space_alias = '';\n}\n\nexport class Group {\n  static id = max(TABLE.GROUP);\n  id = Group.id;\n  alias = '';\n  path = '';\n  is_root = false;\n  type: TYPE = TYPE.USER;\n  tag_id = 0;\n  tag_alias = '';\n  space_id = 0;\n  space_alias = '';\n  children: Group[] = [];\n}\n\nexport class GroupXGroup {\n  static id = max(TABLE.GROUPXGROUP);\n  id = GroupXGroup.id;\n  group_id = 0;\n  group_alias = '';\n  link_group_id = 0;\n  link_group_alias = '';\n}\n\nconst DAO = {\n  Space,\n  Tag,\n  Group,\n  GroupXGroup,\n};\n\nexport default DAO;\n","export const matcher = (cond: any, item: any, boolWhenEmpty = false) => {\n  if (\n    Object.prototype.toString.call(cond) !== '[object Object]' ||\n    Object.keys(cond).length === 0\n  )\n    return boolWhenEmpty;\n  const is = Object.keys(cond).reduce((b: any, key) => {\n    if (b === false) return false;\n    const match = cond[key] === item[key];\n    return match;\n  }, null);\n  return !!is;\n};\n\nexport const transfer = (\n  node: any,\n  mapper: { before: string; after: string }[],\n) => {\n  mapper.forEach((map) => {\n    node[map.after] = node[map.before];\n  });\n  node.children = Array.isArray(node.children)\n    ? node.children.map((x: any) => transfer(x, mapper))\n    : [];\n  return node;\n};\n","import { Space } from '../db/dao';\nimport database from '../db';\nimport { matcher } from '../utils';\n\nconst db = database<Space>(database.TABLE.SPACE);\n\nconst query = (space: Partial<Space>) => {\n  return db.query((x) => matcher(space, x, false));\n};\n\nconst list = (space?: Partial<Space>) => {\n  return db.list((x) => matcher(space, x, true));\n};\n\nconst add = (space: Omit<Space, 'id'>) => {\n  const row = { ...new Space(), ...space };\n  row.id = ++Space.id;\n  db.add(row);\n  return row.id;\n};\n\nconst del = (space: Partial<Space>) => {\n  return db.del((x) => matcher(space, x, false));\n};\n\nconst update = (space: Partial<Space>) => {\n  return db.update(\n    (x) => matcher({ id: space.id }, x, false),\n    (old) => {\n      return { ...old, ...space };\n    },\n  );\n};\n\nexport { add, del, update, query, list };\n","import React, { FC, useCallback, useEffect, useState } from 'react';\nimport { Button, Form, Input, Table } from 'antd';\nimport { Link, RouteComponentProps } from '@reach/router';\nimport * as Api from '../server/space';\nimport { Space } from '../server/vo';\n\nconst { Item } = Form;\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst List: FC<RouteComponentProps> = () => {\n  const [list, setList] = useState<Space[]>([]);\n  const [form] = Form.useForm();\n  const trigger = useCallback(() => {\n    setList(Api.list());\n  }, []);\n  useEffect(() => {\n    trigger();\n  }, [trigger]);\n  const toSubmit = useCallback(\n    (values) => {\n      console.log('values', values);\n      if (values.id) {\n        Api.update(values);\n      } else {\n        Api.add(values);\n      }\n      trigger();\n    },\n    [trigger],\n  );\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ flex: 1 }}>\n        <div>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.setFieldsValue({ alias: '', id: '' });\n            }}\n          >\n            新增\n          </Button>\n        </div>\n        <Table\n          dataSource={list}\n          columns={[\n            { key: 'id', dataIndex: 'id', title: 'ID' },\n            { key: 'alias', dataIndex: 'alias', title: 'ALIAS' },\n            {\n              key: '__op__',\n              render(row) {\n                return (\n                  <div>\n                    <Button\n                      onClick={() => {\n                        Api.del({ id: row.id });\n                        trigger();\n                      }}\n                      type=\"dashed\"\n                    >\n                      删除\n                    </Button>\n                    <Button\n                      type=\"primary\"\n                      onClick={() => {\n                        form.setFieldsValue(row);\n                      }}\n                    >\n                      修改\n                    </Button>\n                    <Link to={`/tag/${row.id}`}>\n                      <Button>编辑TAG</Button>\n                    </Link>\n                  </div>\n                );\n              },\n            },\n          ]}\n        ></Table>\n      </div>\n      <div style={{ flex: 1 }}>\n        <h3>编辑区</h3>\n        <Form {...layout} form={form} onFinish={toSubmit}>\n          <Item name=\"id\" label=\"ID\" required>\n            <Input disabled></Input>\n          </Item>\n          <Item name=\"alias\" label=\"ALIAS\" required>\n            <Input></Input>\n          </Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            保存\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import { Group, GroupXGroup, Space, Tag } from '../db/dao';\nimport database from '../db';\nimport { matcher } from '../utils';\n\nconst db = database<Group>(database.TABLE.GROUP);\nconst dbx = database<GroupXGroup>(database.TABLE.GROUPXGROUP);\nconst dbtype = database<Tag>(database.TABLE.TAG);\nconst dbspace = database<Space>(database.TABLE.SPACE);\nexport type LinkedGroup = Group & {\n  children: LinkedGroup[];\n  links: {\n    [tag_alias: string]: {\n      id: Group['id'];\n      alias: Group['alias'];\n    }[];\n  };\n};\n\nconst fillGroupLinks = (group: Group) => {\n  const g = group as LinkedGroup;\n  const links = dbx\n    // query linked groups\n    .list((x) => x.group_id === group.id)\n    .map((g) => db.query((gg) => gg.id === g.link_group_id))\n    .reduce((o, linked) => {\n      const has = o[linked!.tag_alias];\n      if (has) {\n        has.push({\n          id: linked!.id,\n          alias: linked!.alias,\n        });\n      } else {\n        o[linked!.tag_alias] = [\n          {\n            id: linked!.id,\n            alias: linked!.alias,\n          },\n        ];\n      }\n      return o;\n    }, {} as LinkedGroup['links']);\n  g.links = links;\n};\nconst fillGroupAlias = (group: Group) => {\n  group.space_alias = dbspace.query((x) => x.id === group.space_id)!.alias;\n  group.tag_alias = dbtype.query((x) => x.id === group.tag_id)!.alias;\n};\n\nconst fillGroupChildren = (group: Group) => {\n  const children = db.list((x) => {\n    const notSelf = x.path !== group.path;\n    const isMatch = x.path.startsWith(group.path);\n    const isMutiple = /#.*#/.test(x.path.replace(group.path, ''));\n    return notSelf && isMatch && !isMutiple;\n  });\n  if (Array.isArray(children)) {\n    children.forEach((g) => {\n      fillGroupAlias(g);\n      fillGroupLinks(g);\n      fillGroupChildren(g);\n    });\n    group.children = children;\n  }\n};\n\nconst query = (group: Partial<Group>) => {\n  console.log('group', group);\n  const g = db.query((x) => matcher(group, x, false));\n  if (!g) return null;\n  fillGroupAlias(g);\n  fillGroupLinks(g);\n  fillGroupChildren(g);\n  return g;\n};\n\nconst list = (group: Partial<Group>) => {\n  console.log('group', group);\n  const items = db.list((x) => matcher(group, x, false));\n  return items.map((g) => {\n    fillGroupAlias(g);\n    fillGroupLinks(g);\n    fillGroupChildren(g);\n    return g;\n  });\n};\n\nconst add = (\n  group: Omit<Group, 'id'>,\n  parent: {\n    path?: Group['path'];\n    space_id: Group['space_id'];\n    space_alias: Group['space_alias'];\n    tag_id: Group['tag_id'];\n    tag_alias: Group['tag_alias'];\n    type: Group['type'];\n  },\n) => {\n  const row = { ...new Group(), ...group };\n  row.id = ++Group.id;\n  row.path = parent.path ? `${parent.path}${row.id}#` : `ROOT${row.id}#`;\n  row.space_id = parent.space_id;\n  row.space_alias = parent.space_alias;\n  row.tag_id = parent.tag_id;\n  row.tag_alias = parent.tag_alias;\n  row.type = parent.type;\n  db.add(row);\n  return row.id;\n};\n\nconst link = (req: { links: number[]; group_id: number }) => {\n  const map = req.links.reduce((o: any, c) => {\n    o[c] = 'append';\n    return o;\n  }, {});\n  dbx.del((x) => {\n    const exist = map[x.link_group_id];\n    if (exist) {\n      delete map[x.link_group_id];\n    }\n    return x.group_id === req.group_id && exist;\n  });\n  Object.keys(map).forEach((append) => {\n    const x = new GroupXGroup();\n    x.id = ++GroupXGroup.id;\n    x.group_id = req.group_id;\n    x.link_group_id = +append;\n    x.group_alias = db.query((x) => x.id === req.group_id)!.alias;\n    x.link_group_alias = db.query((x) => x.id === +append)!.alias;\n    dbx.add(x);\n  });\n};\n\nconst del = (group: Partial<Group>) => {\n  const d = db.query((x) => matcher(group, x, false));\n\n  // 事务??\n\n  if (!d) return;\n  // 删除关联表\n  db.list((x) => x.path.startsWith(d.path)).forEach((son) => {\n    dbx.del((x) => x.group_id === son.id || x.link_group_id === son.id);\n  });\n  // 删除本体\n  const ret = db.del((x) => !x.is_root && x.path.startsWith(d.path));\n  return ret;\n};\n\nconst update = (group: Partial<Group>) => {\n  const match: typeof group = {};\n  if (group.id) match.id = group.id;\n  if (group.tag_id) match.tag_id = group.tag_id;\n  if (group.space_id) match.space_id = group.space_id;\n  return db.update(\n    (x) => matcher(match, x, false),\n    (old) => {\n      return { ...old, ...group };\n    },\n  );\n};\n\nexport { add, link, del, update, query, list };\n","import { Group, Space, Tag } from '../db/dao';\nimport database from '../db';\nimport * as group from './group';\nimport { matcher } from '../utils';\n\nconst db = database<Tag>(database.TABLE.TAG);\nconst dbspace = database<Space>(database.TABLE.SPACE);\n\nconst query = (tag: Partial<Tag>) => {\n  const t = db.query((x) => matcher(tag, x, false));\n  return t;\n};\n\nconst list = (tag?: Partial<Tag>) => {\n  const tags = db.list((x) => matcher(tag, x, true));\n  return tags;\n};\n\nconst add = (tag: Omit<Tag, 'id'>) => {\n  const row = { ...new Tag(), ...tag };\n  row.space_alias = dbspace.query((x) => x.id === tag.space_id)!.alias;\n  row.alias = tag.alias;\n  row.id = ++Tag.id;\n  db.add(row);\n  const root = new Group();\n  root.alias = tag.alias;\n  root.children = [];\n  root.is_root = true;\n\n  group.add(root, {\n    space_alias: row.space_alias,\n    space_id: row.space_id,\n    tag_id: row.id,\n    tag_alias: row.alias,\n    type: row.type,\n  });\n  return row.id;\n};\n\nconst del = (tag: Partial<Tag>) => {\n  const t = db.query((x) => matcher(tag, x, false));\n  if (!t) return;\n  const retg = group.del({ tag_id: t.id });\n  const ret = db.del((x) => x.id === t.id);\n  return retg && ret;\n};\n\nconst update = (tag: Partial<Tag>) => {\n  const match: typeof tag = {};\n  if (tag.id) match.id = tag.id;\n  if (tag.space_id) match.space_id = tag.space_id;\n  return db.update(\n    (x) => matcher({ id: tag.id }, x, false),\n    (old) => {\n      const neo = { ...old, ...tag };\n      group.update({ tag_id: neo.id, type: neo.type, tag_alias: neo.alias });\n      return neo;\n    },\n  );\n};\n\nexport { add, del, update, query, list };\n","import React, { FC, useCallback, useEffect, useState } from 'react';\nimport { Button, Form, Input, Radio, Table } from 'antd';\nimport { Link, RouteComponentProps, useParams } from '@reach/router';\nimport * as Api from '../server/tag';\nimport { Tag } from '../server/vo';\nimport { TYPE } from '../db';\n\nconst { Item } = Form;\nconst { Group: RadioGroup } = Radio;\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst List: FC<RouteComponentProps> = () => {\n  const [list, setList] = useState<Tag[]>([]);\n  const params = useParams();\n  const [form] = Form.useForm();\n  const trigger = useCallback(() => {\n    setList(Api.list({ space_id: +params.space_id }));\n  }, [params.space_id]);\n  useEffect(() => {\n    trigger();\n  }, [trigger]);\n  const toSubmit = useCallback(\n    (values) => {\n      console.log('values', values);\n      values.space_id = +params.space_id;\n      if (values.id) {\n        Api.update(values);\n      } else {\n        Api.add(values);\n      }\n      trigger();\n    },\n    [params.space_id, trigger],\n  );\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ flex: 1 }}>\n        <div>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              form.setFieldsValue({ alias: '' });\n            }}\n          >\n            新增\n          </Button>\n        </div>\n        <Table\n          dataSource={list}\n          columns={[\n            { key: 'id', dataIndex: 'id', title: 'ID' },\n            { key: 'alias', dataIndex: 'alias', title: 'ALIAS' },\n            { key: 'type', dataIndex: 'type', title: 'TYPE' },\n            {\n              key: 'space_alias',\n              dataIndex: 'space_alias',\n              title: 'SPACE_ALIAS',\n            },\n            {\n              key: '__op__',\n              render(row) {\n                return (\n                  <div>\n                    <Button\n                      onClick={() => {\n                        Api.del({ id: row.id });\n                        trigger();\n                      }}\n                      type=\"dashed\"\n                    >\n                      删除\n                    </Button>\n                    <Button\n                      type=\"primary\"\n                      onClick={() => {\n                        form.setFieldsValue(row);\n                      }}\n                    >\n                      修改\n                    </Button>\n                    <Link to={`/group/${params.space_id}/${row.id}`}>\n                      <Button>编辑GROUP</Button>\n                    </Link>\n                  </div>\n                );\n              },\n            },\n          ]}\n        ></Table>\n      </div>\n      <div style={{ flex: 1 }}>\n        <h3>编辑区</h3>\n        <Form {...layout} form={form} onFinish={toSubmit}>\n          <Item name=\"id\" label=\"ID\" required>\n            <Input disabled></Input>\n          </Item>\n          <Item name=\"alias\" label=\"ALIAS\" required>\n            <Input></Input>\n          </Item>\n          <Item name=\"type\" label=\"TYPE\" required>\n            <RadioGroup\n              options={[\n                {\n                  label: TYPE.USER,\n                  value: TYPE.USER,\n                },\n                {\n                  label: TYPE.ROLE,\n                  value: TYPE.ROLE,\n                },\n                {\n                  label: TYPE.DATA,\n                  value: TYPE.DATA,\n                },\n                {\n                  label: TYPE.RESOURCE,\n                  value: TYPE.RESOURCE,\n                },\n              ]}\n            ></RadioGroup>\n          </Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            保存\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import React, { FC, useState } from 'react';\nimport { Tree } from 'antd';\n\ntype Props = {\n  value?: string[];\n  onChange?: (value: string[]) => void;\n  tree: any[];\n};\n\nconst TreeSelector: FC<Props> = ({ value, onChange, tree }) => {\n  const [expandedKeys, setExpandedKeys] = useState<string[]>([]);\n  // const [checkedKeys, setCheckedKeys] = useState<string[]>();\n  // const [selectedKeys, setSelectedKeys] = useState<string[]>([]);\n  const [autoExpandParent, setAutoExpandParent] = useState<boolean>(true);\n\n  const onExpand = (expandedKeys: any) => {\n    console.log('onExpand', expandedKeys);\n    // if not set autoExpandParent to false, if children expanded, parent can not collapse.\n    // or, you can remove all expanded children keys.\n    setExpandedKeys(expandedKeys);\n    setAutoExpandParent(false);\n  };\n\n  const onCheck = (checkedKeys: any) => {\n    console.log('onCheck', checkedKeys);\n    // setCheckedKeys(checkedKeys);\n    if (onChange) {\n      onChange(checkedKeys);\n    }\n  };\n\n  return (\n    <Tree\n      checkable\n      onExpand={onExpand}\n      expandedKeys={expandedKeys}\n      autoExpandParent={autoExpandParent}\n      onCheck={onCheck}\n      checkedKeys={value}\n      treeData={tree}\n    />\n  );\n};\n\nexport default TreeSelector;\n","import React, { FC, useCallback, useEffect, useState } from 'react';\nimport { Button, Col, Form, Input, Row, Tree } from 'antd';\nimport { RouteComponentProps, useParams } from '@reach/router';\nimport * as Api from '../server/group';\nimport { TYPE } from '../db';\nimport TreeSelector from '../comps/TreeSelector';\nimport { transfer } from '../utils';\n\nconst { Item } = Form;\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\n\nconst watedTypes = (type: TYPE) => {\n  switch (type) {\n    case TYPE.USER:\n      return [TYPE.DATA, TYPE.ROLE];\n    case TYPE.DATA:\n      return [TYPE.USER];\n    case TYPE.RESOURCE:\n      return [TYPE.ROLE];\n    case TYPE.ROLE:\n      return [TYPE.USER, TYPE.RESOURCE];\n    default:\n      return [];\n  }\n};\nconst List: FC<RouteComponentProps> = () => {\n  const [tree, setTree] = useState<any>([]);\n  const [dataSource, setDataSource] = useState<any>({});\n  const params = useParams();\n  const [form] = Form.useForm();\n  const trigger = useCallback(() => {\n    const root = Api.query({\n      space_id: +params.space_id,\n      tag_id: +params.tag_id,\n      is_root: true,\n    });\n    console.log('root', root);\n    const transfer = (node: any) => {\n      node.title = (\n        <Row gutter={16}>\n          <Col>\n            <div>{node.alias}</div>\n          </Col>\n          <Col>\n            <Button\n              type=\"link\"\n              onClick={(e) => {\n                e.stopPropagation();\n                Api.del({ id: node.id });\n                trigger();\n              }}\n            >\n              删除\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              type=\"link\"\n              onClick={(e) => {\n                e.stopPropagation();\n                form.setFieldsValue(node);\n              }}\n            >\n              查看\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              type=\"link\"\n              onClick={(e) => {\n                e.stopPropagation();\n                const neo: any = {};\n                neo.parentPath = node.path;\n                form.setFieldsValue(neo);\n              }}\n            >\n              添加子节点\n            </Button>\n          </Col>\n        </Row>\n      );\n      node.key = node.path;\n      node.children = Array.isArray(node.children)\n        ? node.children.map((x: any) => transfer(x))\n        : [];\n      return node;\n    };\n    setTree([transfer(root || {})]);\n  }, [form, params.space_id, params.tag_id]);\n  useEffect(() => {\n    trigger();\n  }, [trigger]);\n  const toSubmit = useCallback(\n    (values) => {\n      console.log('values', values);\n      if (values.id) {\n        Api.update({\n          ...values,\n          space_id: +params.space_id,\n          tag_id: +params.tag_id,\n        });\n      } else {\n        Api.add(\n          {\n            ...values,\n            space_id: +params.space_id,\n            tag_id: +params.tag_id,\n          },\n          values.parentPath,\n        );\n      }\n      trigger();\n    },\n    [params.space_id, params.tag_id, trigger],\n  );\n\n  const tags = useCallback(() => {\n    if (!tree[0]) return;\n    const types = watedTypes(tree[0].type);\n    const trees = types.reduce((o: any, type) => {\n      const nodes = Api.list({ type });\n      const tree = nodes.reduce((a: any, node) => {\n        if (!node) return [];\n        const t = transfer(node, [\n          { before: 'alias', after: 'title' },\n          {\n            before: 'path',\n            after: 'key',\n          },\n        ]);\n        a[node.alias] = [t];\n        return a;\n      }, {});\n      console.log(`treeeeee${type}`, tree);\n      o[type] = tree;\n      return o;\n    }, {});\n    setDataSource(trees);\n    console.log('trees', trees);\n  }, [tree]);\n  useEffect(() => {\n    tags();\n  }, [tags]);\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ flex: 1 }}>\n        <Tree autoExpandParent defaultExpandAll showLine treeData={tree}></Tree>\n      </div>\n      <div style={{ flex: 1 }}>\n        <h3>编辑区</h3>\n        <Form {...layout} form={form} onFinish={toSubmit}>\n          <Item name=\"id\" label=\"ID\" required>\n            <Input disabled></Input>\n          </Item>\n          <Item name=\"parentPath\" label=\"PARENT_PATH\" required>\n            <Input disabled></Input>\n          </Item>\n          <Item name=\"path\" label=\"PATH\" required>\n            <Input disabled></Input>\n          </Item>\n          <Item name=\"alias\" label=\"ALIAS\" required>\n            <Input></Input>\n          </Item>\n          {Object.keys(dataSource).map((type) => {\n            return (\n              <div>\n                <h2>{type}</h2>\n                <div>\n                  {Object.keys(dataSource[type]).map((alias) => {\n                    return (\n                      <Item\n                        name={`${type}.${alias}`}\n                        label={`${type}.${alias}`}\n                      >\n                        <TreeSelector\n                          tree={dataSource[type][alias]}\n                        ></TreeSelector>\n                      </Item>\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          })}\n\n          <Button type=\"primary\" htmlType=\"submit\">\n            保存\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import React from 'react';\nimport Nav from './Nav';\nimport { RouteComponentProps, Router } from '@reach/router';\nimport Space from './Space';\nimport Tag from './Tag';\nimport Group from './Group';\n\nlet Home = (props: RouteComponentProps) => <div>Home</div>;\n\nexport const App: React.FunctionComponent = () => {\n  return (\n    <div\n      style={{\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n    >\n      <div\n        style={{\n          padding: '8px',\n          boxShadow: '0px 0px 12px #cecece',\n        }}\n      >\n        <h2>Access Control Evolved</h2>\n      </div>\n      <div style={{ flex: 1, display: 'flex', padding: '16px' }}>\n        <div style={{ width: '200px', height: '100vh' }}>\n          <Nav></Nav>\n        </div>\n        <div style={{ height: '100vh', width: '100%', padding: '0 8px' }}>\n          <Router>\n            <Home path=\"/\"></Home>\n            <Space path=\"/space\"></Space>\n            <Tag path=\"/tag/:space_id\"></Tag>\n            <Group path=\"/group/:space_id/:tag_id\"></Group>\n          </Router>\n        </div>\n      </div>\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentTag = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentTag != null && contentTag.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}